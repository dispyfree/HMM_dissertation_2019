mh$noParmsToEstim <- as.factor(mh$noParmsToEstim)
ggplot(mh, aes(x=noParmsToEstim, group =c(noParmsToEstim, modelRun), y= log(timeSpent))) + geom_boxplot() + ggtitle('time spent in log(seconds) for Bernoulli model') + xlab('# parameters to estimate') + ylab('log(time)')


aggregated <- aggregate(mh$timeSpent, by = list(mh$noParmsToEstim, mh$run), FUN=sd)
aggregated$noParmsToEstim <- aggregated$Group.1
ggplot(aggregated, aes(x=noParmsToEstim, y= x)) + geom_boxplot() + ggtitle('variance of execution times (in s) within runs of one model') + xlab('# parameters to estimate') + ylab('time')


mh$ss <- as.factor(mh$ss)
ggplot(mh, aes(x=ss, y= noParmsToEstim, color= log(timeSpent))) + geom_density_2d() + ggtitle('time spent in seconds for Bernoulli model') + xlab('sample size') + ylab('# parameters')


-----------------------------------------------------------------------
#QUALITY
#newGibs 2-6
mh <- mh[mh$modelSize > 0,]
mh$modelSize <- as.factor(mh$modelSize)
mh$ss <- as.factor(mh$ss)
mhConverged <- mh[mh$noIterations < 3000,]

ggplot(mhConverged, aes(x = modelSize, y=meanDist)) + geom_boxplot( aes(fill=ss)) + ggtitle('impact of complexity on quality of solutions')

#CONVERGENCE 
mhAccepted <- data.frame(modelSize = c(0), ss = c(0), rate = c(0))
for(ss in c(500, 1000, 1500, 2000)){ for(m in 2:6){ mhAccepted <- rbind(mhAccepted, c(m, ss, sum(mh$noIterations < 3000 & mh$ss == ss & mh$modelSize == m) / sum(mh$ss == ss & mh$modelSize == m)))}}
mhAccepted <- mhAccepted[-1, ]

mhAccepted$modelSize <- as.factor(mhAccepted$modelSize)
mhAccepted$ss <- as.factor(mhAccepted$ss)
mhAccepted <- arrange(mhAccepted, desc(mhAccepted$ss))
mhAccepted <- arrange(mhAccepted, mhAccepted$modelSize)

ggplot(mhAccepted, aes(x = modelSize)) + geom_bar( aes(y=rate, fill=ss), stat='identity', position='dodge') + ggtitle('impact of sample size on convergence rate')  + geom_text(aes( y=rate, fill=ss), stat='identity', label=scales::percent(mhAccepted$rate) , position = position_dodge(0.9), vjust = 1.5, colour='grey23')



#RUNTIME
ggplot(mhConverged, aes(x = modelSize, y=timeSpent)) + geom_boxplot( aes(fill=ss)) + ggtitle('impact of complexity on runtime')

#ITERATIONS
ggplot(mhConverged, aes(x = modelSize, y=noIterations)) + geom_boxplot( aes(fill=ss)) + ggtitle('impact of complexity on number of iterations')



ggplot(mh, aes(x=noParmsToEstim, group =c(noParmsToEstim, modelRun), y= log(timeSpent))) + geom_boxplot() + ggtitle('time spent in log(seconds) for Bernoulli model') + xlab('# parameters to estimate') + ylab('log(time)')

